// <auto-generated />
using System;
using AviationManagementApi.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AviationManagementSystem.Data.Migrations
{
    [DbContext(typeof(AviationManagementDbContext))]
    [Migration("20210418210013_AlterandoCampos")]
    partial class AlterandoCampos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AviationManagementApi.Business.Models.Aeronave", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Ano")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Fabricante")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("HorasRestantes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HorasTotais")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Imagem")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("NumeroSerie")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal?>("PesoBasico")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PesoVazio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ProximaIntervencao")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ProximaPesagem")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Situacao")
                        .HasColumnType("bit");

                    b.Property<int>("TipoAeronave")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UltimaPesagem")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Matricula")
                        .IsUnique();

                    b.ToTable("Aeronaves");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.AeronaveAbastecimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AeronaveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comprovante")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cupom")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Fornecedora")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Litros")
                        .HasColumnType("int");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("NotaFiscal")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Responsavel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AeronaveId");

                    b.ToTable("Aeronaves_Abastecimentos");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.AeronaveDiretriz", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AeronaveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataEfetivacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<decimal?>("IntervaloCiclos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("IntervaloDias")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("IntervaloHoras")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Referencia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("TipoDiretriz")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("UltimoCumprimentoCiclos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UltimoCumprimentoData")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("UltimoCumprimentoHoras")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AeronaveId");

                    b.ToTable("Aeronaves_Diretrizes");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.AeronaveDocumento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AeronaveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Arquivo")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("DataEmissao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataValidade")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AeronaveId");

                    b.ToTable("Aeronaves_Documentos");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.AeronaveMotor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AeronaveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("CiclosTotais")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Fabricante")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("HorasTotais")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NumeroSerie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AeronaveId");

                    b.ToTable("Aeronaves_Motores");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.AeronaveTarifa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AeronaveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Numeracao")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("OrgaoEmissorTarifa")
                        .HasColumnType("int");

                    b.Property<bool>("Situacao")
                        .HasColumnType("bit");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Vencimento")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AeronaveId");

                    b.ToTable("Aeronaves_Tarifas");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.AlunoTurma", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataInscricao")
                        .HasColumnType("datetime2");

                    b.Property<int>("SituacaoAluno")
                        .HasColumnType("int");

                    b.Property<Guid>("TurmaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("TurmaId");

                    b.ToTable("Alunos_Turmas");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.CategoriaTreinamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categorias_Treinamentos");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.CategoriaVoo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categorias_Voos");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Contas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoBarras")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FormaPagamento")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Curso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.DiariaTripulante", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Finalidade")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("FormaPagamento")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TripulanteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("TripulanteId");

                    b.ToTable("Diarias_Tripulantes");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.DiarioBordo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AcoesCorretivas")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<Guid>("AeronaveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Base")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<Guid>("ComandanteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CombustivelDecolagem")
                        .HasColumnType("int");

                    b.Property<Guid?>("CopilotoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("De")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Discrepancias")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<DateTime>("HoraAcionamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraCorte")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("HoraDecolagem")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("HoraPouso")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MecanicoResponsavelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NaturezaVoo")
                        .HasColumnType("int");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Para")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)");

                    b.Property<int>("Pob")
                        .HasColumnType("int");

                    b.Property<string>("PosVooResponsavel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Pousos")
                        .HasColumnType("int");

                    b.Property<string>("PreVooResponsavel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("TotalAcionamentoCorte")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalDecPouso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDecimal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("TotalDiurno")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TotalIfr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TotalNavegacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("TotalNoturno")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AeronaveId");

                    b.HasIndex("ComandanteId");

                    b.HasIndex("CopilotoId");

                    b.HasIndex("MecanicoResponsavelId");

                    b.ToTable("Diarios_Bordo");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Complemento")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId")
                        .IsUnique();

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Escala", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TripulanteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TripulanteId");

                    b.ToTable("Escalas");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.ItemOrdemServico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Custo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("OrdemServicoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ServicoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrdemServicoId");

                    b.HasIndex("ServicoId");

                    b.ToTable("Itens_OrdensServico");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Legislacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Arquivo")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("DataEmenda")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Emenda")
                        .HasColumnType("int");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int>("TipoLegislacao")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Legislacoes");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.LicencaHabilitacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ColaboradorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("Validade")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradorId");

                    b.ToTable("Licencas_Habilitacoes");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.ManualEmpresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Arquivo")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("DataRevisao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("RevisaoAnalise")
                        .HasColumnType("int");

                    b.Property<int>("RevisaoAtual")
                        .HasColumnType("int");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("Manuais_Empresa");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.ManualVoo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Arquivo")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ModeloAeronave")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("UltimaRevisao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Manuais_Voo");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.OficioEmitido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Arquivo")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Assunto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destinatario")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Mensagem")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Numeracao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Responsavel")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Oficios_Emitidos");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.OficioRecebido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Arquivo")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Assunto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Numeracao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Remetente")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Oficios_Recebidos");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.OrdemServico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AeronaveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAbertura")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataFechamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInspecao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataRealizacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("InspecionadoPor")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("InspecionadoPorAnac")
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("NumeroOrdem")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("RealizadoPor")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("RealizadoPorAnac")
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("RequisicaoMateriais")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("TcsnCiclos")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TcsnPousos")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Tipo")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Ttsn")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TtsnMotor")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("AeronaveId");

                    b.HasIndex("NumeroOrdem")
                        .IsUnique();

                    b.ToTable("Ordens_Servico");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.PassagemAerea", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Assento")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<Guid>("ColaboradorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCompra")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVoo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FormaPagamento")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Localizador")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Origem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradorId");

                    b.ToTable("Passagens_Aereas");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EstadoCivil")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Imagem")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("TipoPessoa")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Rastreador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AeronaveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Modelo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("AeronaveId")
                        .IsUnique();

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("Rastreadores");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Servico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<decimal?>("Custo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("Codigo")
                        .IsUnique();

                    b.ToTable("Servicos");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Suprimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aplicacao")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Capitulo")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Codigo")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Doc")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Imagem")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Localizacao")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Nomenclatura")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("PartNumberAlternativo")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Suprimentos");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.SuprimentoMovimentacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("TipoMovimentacaoEnum")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("Suprimento_Movimentacoes");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Treinamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CargaHoraria")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ClassificacaoTreinamento")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataTermino")
                        .HasColumnType("datetime2");

                    b.Property<string>("Instrutor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ModeloAeronave")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TipoClasse")
                        .HasColumnType("int");

                    b.Property<int>("TipoTreinamento")
                        .HasColumnType("int");

                    b.Property<Guid>("TripulanteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("TripulanteId");

                    b.ToTable("Treinamentos");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Turma", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<Guid>("CursoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataTermino")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Inscricao")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Mensalidade")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("Turmas");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Veiculo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Ano")
                        .HasColumnType("int");

                    b.Property<string>("Imagem")
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("KmAtual")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<bool>("Proprio")
                        .HasColumnType("bit");

                    b.Property<string>("Renavam")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("TipoCombustivel")
                        .HasColumnType("int");

                    b.Property<string>("UfPlaca")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.HasKey("Id");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.VeiculoGasto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("MotoristaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Situacao")
                        .HasColumnType("bit");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("MotoristaId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Veiculo_Gastos");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.VeiculoMulta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AutoInfracao")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Classificacao")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Responsavel")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("Situacao")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Veiculo_Multas");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.VooAgendado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AeronaveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AllDay")
                        .HasColumnType("bit");

                    b.Property<string>("BackgroundColor")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("DurationEditable")
                        .HasColumnType("bit");

                    b.Property<bool>("Editable")
                        .HasColumnType("bit");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<string>("TextColor")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("AeronaveId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Voos_Agendados");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.VooInstrucao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AeronaveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlunoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Avaliacao")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InstrutorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("TempoVoo")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AeronaveId");

                    b.HasIndex("AlunoId");

                    b.HasIndex("InstrutorId");

                    b.ToTable("Voos_Instrucao");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.ContasPagar", b =>
                {
                    b.HasBaseType("AviationManagementApi.Business.Models.Contas");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ValorPagar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorPago")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable("Contas_Pagar");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.ContasReceber", b =>
                {
                    b.HasBaseType("AviationManagementApi.Business.Models.Contas");

                    b.Property<DateTime?>("DataRecebimento")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ValorReceber")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorRecebido")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable("Contas_Receber");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Aluno", b =>
                {
                    b.HasBaseType("AviationManagementApi.Business.Models.Pessoa");

                    b.Property<string>("CANAC")
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalVoado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ValidadeCMA")
                        .HasColumnType("datetime2");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Cliente", b =>
                {
                    b.HasBaseType("AviationManagementApi.Business.Models.Pessoa");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Colaborador", b =>
                {
                    b.HasBaseType("AviationManagementApi.Business.Models.Pessoa");

                    b.Property<string>("CANAC")
                        .HasMaxLength(6)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("Cargo")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("DataAdmissao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDemissao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("NumeroCnh")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("NumeroCtps")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("NumeroPis")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("OrgaoEmissor")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<decimal?>("Salario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoColaborador")
                        .HasColumnType("int");

                    b.Property<int>("TipoVinculo")
                        .HasColumnType("int");

                    b.Property<string>("TituloEleitor")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("ValidadeCMA")
                        .HasColumnType("datetime2");

                    b.ToTable("Colaboradores");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Fornecedor", b =>
                {
                    b.HasBaseType("AviationManagementApi.Business.Models.Pessoa");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.AeronaveAbastecimento", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.Aeronave", "Aeronave")
                        .WithMany("AeronavesAbastecimentos")
                        .HasForeignKey("AeronaveId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aeronave");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.AeronaveDiretriz", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.Aeronave", "Aeronave")
                        .WithMany("AeronaveDiretrizes")
                        .HasForeignKey("AeronaveId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aeronave");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.AeronaveDocumento", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.Aeronave", "Aeronave")
                        .WithMany("AeronaveDocumentos")
                        .HasForeignKey("AeronaveId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aeronave");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.AeronaveMotor", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.Aeronave", "Aeronave")
                        .WithMany("AeronaveMotores")
                        .HasForeignKey("AeronaveId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aeronave");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.AeronaveTarifa", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.Aeronave", "Aeronave")
                        .WithMany("AeronaveTarifas")
                        .HasForeignKey("AeronaveId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aeronave");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.AlunoTurma", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.Aluno", "Aluno")
                        .WithMany("AlunosTurmas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AviationManagementApi.Business.Models.Turma", "Turma")
                        .WithMany("AlunosTurmas")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.DiariaTripulante", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.Colaborador", "Tripulante")
                        .WithMany("DiariasTripulante")
                        .HasForeignKey("TripulanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tripulante");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.DiarioBordo", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.Aeronave", "Aeronave")
                        .WithMany("DiariosBordo")
                        .HasForeignKey("AeronaveId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AviationManagementApi.Business.Models.Colaborador", "Comandante")
                        .WithMany("DiariosBordoComandante")
                        .HasForeignKey("ComandanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AviationManagementApi.Business.Models.Colaborador", "Copiloto")
                        .WithMany("DiariosBordoCopiloto")
                        .HasForeignKey("CopilotoId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AviationManagementApi.Business.Models.Colaborador", "MecanicoResponsavel")
                        .WithMany("DiariosBordoMecanico")
                        .HasForeignKey("MecanicoResponsavelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aeronave");

                    b.Navigation("Comandante");

                    b.Navigation("Copiloto");

                    b.Navigation("MecanicoResponsavel");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Endereco", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.Fornecedor", "Fornecedor")
                        .WithOne("Endereco")
                        .HasForeignKey("AviationManagementApi.Business.Models.Endereco", "FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Escala", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.Colaborador", "Tripulante")
                        .WithMany("Escalas")
                        .HasForeignKey("TripulanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tripulante");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.ItemOrdemServico", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.OrdemServico", "OrdemServico")
                        .WithMany("Itens")
                        .HasForeignKey("OrdemServicoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AviationManagementApi.Business.Models.Servico", "Servico")
                        .WithMany("Itens")
                        .HasForeignKey("ServicoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OrdemServico");

                    b.Navigation("Servico");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.LicencaHabilitacao", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.Colaborador", "Colaborador")
                        .WithMany("LicencasHabilitacoes")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Colaborador");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.OrdemServico", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.Aeronave", "Aeronave")
                        .WithMany("OrdensServico")
                        .HasForeignKey("AeronaveId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aeronave");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.PassagemAerea", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.Colaborador", "Colaborador")
                        .WithMany("PassagensAereas")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Produto", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.Fornecedor", "Fornecedor")
                        .WithMany("Produtos")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Rastreador", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.Aeronave", "Aeronave")
                        .WithOne("Rastreador")
                        .HasForeignKey("AviationManagementApi.Business.Models.Rastreador", "AeronaveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aeronave");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.SuprimentoMovimentacao", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.Suprimento", "Item")
                        .WithMany("SuprimentosMovimentacoes")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Treinamento", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.CategoriaTreinamento", "Categoria")
                        .WithMany("Treinamentos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AviationManagementApi.Business.Models.Colaborador", "Tripulante")
                        .WithMany("Treinamentos")
                        .HasForeignKey("TripulanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Tripulante");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Turma", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.Curso", "Curso")
                        .WithMany("Turmas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.VeiculoGasto", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.Colaborador", "Motorista")
                        .WithMany("VeiculosGastos")
                        .HasForeignKey("MotoristaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AviationManagementApi.Business.Models.Veiculo", "Veiculo")
                        .WithMany("VeiculoGastos")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Motorista");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.VeiculoMulta", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.Veiculo", "Veiculo")
                        .WithMany("VeiculoMultas")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.VooAgendado", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.Aeronave", "Aeronave")
                        .WithMany("VoosAgendados")
                        .HasForeignKey("AeronaveId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AviationManagementApi.Business.Models.CategoriaVoo", "Categoria")
                        .WithMany("VoosAgendados")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aeronave");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.VooInstrucao", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.Aeronave", "Aeronave")
                        .WithMany("VoosInstrucao")
                        .HasForeignKey("AeronaveId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AviationManagementApi.Business.Models.Aluno", "Aluno")
                        .WithMany("VoosInstrucao")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AviationManagementApi.Business.Models.Colaborador", "Instrutor")
                        .WithMany("VoosInstrucao")
                        .HasForeignKey("InstrutorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aeronave");

                    b.Navigation("Aluno");

                    b.Navigation("Instrutor");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.ContasPagar", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.Contas", null)
                        .WithOne()
                        .HasForeignKey("AviationManagementApi.Business.Models.ContasPagar", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.ContasReceber", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.Contas", null)
                        .WithOne()
                        .HasForeignKey("AviationManagementApi.Business.Models.ContasReceber", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Aluno", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.Pessoa", null)
                        .WithOne()
                        .HasForeignKey("AviationManagementApi.Business.Models.Aluno", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Cliente", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.Pessoa", null)
                        .WithOne()
                        .HasForeignKey("AviationManagementApi.Business.Models.Cliente", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Colaborador", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.Pessoa", null)
                        .WithOne()
                        .HasForeignKey("AviationManagementApi.Business.Models.Colaborador", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Fornecedor", b =>
                {
                    b.HasOne("AviationManagementApi.Business.Models.Pessoa", null)
                        .WithOne()
                        .HasForeignKey("AviationManagementApi.Business.Models.Fornecedor", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Aeronave", b =>
                {
                    b.Navigation("AeronaveDiretrizes");

                    b.Navigation("AeronaveDocumentos");

                    b.Navigation("AeronaveMotores");

                    b.Navigation("AeronavesAbastecimentos");

                    b.Navigation("AeronaveTarifas");

                    b.Navigation("DiariosBordo");

                    b.Navigation("OrdensServico");

                    b.Navigation("Rastreador");

                    b.Navigation("VoosAgendados");

                    b.Navigation("VoosInstrucao");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.CategoriaTreinamento", b =>
                {
                    b.Navigation("Treinamentos");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.CategoriaVoo", b =>
                {
                    b.Navigation("VoosAgendados");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Curso", b =>
                {
                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.OrdemServico", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Servico", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Suprimento", b =>
                {
                    b.Navigation("SuprimentosMovimentacoes");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Turma", b =>
                {
                    b.Navigation("AlunosTurmas");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Veiculo", b =>
                {
                    b.Navigation("VeiculoGastos");

                    b.Navigation("VeiculoMultas");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Aluno", b =>
                {
                    b.Navigation("AlunosTurmas");

                    b.Navigation("VoosInstrucao");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Colaborador", b =>
                {
                    b.Navigation("DiariasTripulante");

                    b.Navigation("DiariosBordoComandante");

                    b.Navigation("DiariosBordoCopiloto");

                    b.Navigation("DiariosBordoMecanico");

                    b.Navigation("Escalas");

                    b.Navigation("LicencasHabilitacoes");

                    b.Navigation("PassagensAereas");

                    b.Navigation("Treinamentos");

                    b.Navigation("VeiculosGastos");

                    b.Navigation("VoosInstrucao");
                });

            modelBuilder.Entity("AviationManagementApi.Business.Models.Fornecedor", b =>
                {
                    b.Navigation("Endereco");

                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
